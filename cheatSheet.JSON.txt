JSON Cheatsheet

References
     https://www.youtube.com/watch?v=iiADhChRriM -- Learn JSON in 10 Minutes
     https://www.json.org/json-en.html -- includes a list of parser libraries for languages
     https://www.w3schools.com/js/js_json_intro.asp -- JSON tutorial
     https://linuxprograms.wordpress.com/2010/08/19/json_object_new_object/ -- create a JSON object in C using the C json library

Overview
    JSON Javascript Object Notation
    Data representation format in objects and arrays
    Lightweight
    Easy to Read
    Integrates with Javascript so variables in javascript can be assigned JSON values
    All languages have libraries that read and write JSON

Use Cases
    Internet API's
    Game Configuration Files
    VSCode configuration

Syntax
    Datatype support: 
        strings -- enclosed in double-quote 
        numbers -- integers and floats
        booleans -- true or fals (unquoted)
        null -- as unquoted null, represents 'empty' value
        arrays -- enclosed in {} amd comma-separated
        objects -- {} containing key:value pairs comma separated
    Top level of a file is an object or an array
    file has .json extension
    Lists or arrays are surrounded by []
    Arrays and objects can be nested
    All names (keys) and string values must be enclosed in double-quotes
    Numbers in JSON are not quoted

Comments
    JSON does not support comments

File Extension
    .json

MIME Type
    "Applicatoin/json"

Online Validators and Linters
    https://jsonlint.com/ -- validates and formats JSON
    https://jsonformatter.curiousconcept.com/#about -- validates, formats, allows indent setting and full-page view

Example JSON Object
    {
        "name": "Geoffrey",
        "favoriteNumber": 3,
        "isProgrammer": true,
        "hobbies": ["Running", "Coding", "Cleaning"],
        "friends": 
        [
            { "name": "Michael",
              "isProgrammer": false
            },
            { "name": "Jennifer",
              "isProgrammer": true
            }
        ]
    }

Example JSON Array of Objects
    {People:
        [{"name": "John", "Age": "20"},
         {"name": "Mary": "Age": "34"},
         {"name": "Fred": "Age": "55"}
        }
    }
         

Field References
    jsonVar.name -- references the name field
    jsonVar["Error Message"] -- references the "Error Message" field (the field name is multi-word with spaces)

Javascript and JSON
    JSON.parse() -- converts a string into a JSON object
    JSON.stringify() -- converts a JSON object into a string

JSON and C
    Include <json/json.h>
    compile with -ljson-c , for example ...
        jsontest: jsontest.c$
        ^I$(CC) $(CFLAGS) $@ $^ -ljson-c$

Sample Programs
    C:\Users\gjarm\OneDrive\Computing\Languages\cLang\codeSandbox\jsontest.c -- sample program to read json in C
    C:\Users\gjarm\OneDrive\Computing\Languages\cLang\codeSandbox\json4Ajax.c -- sample program to create a json response to an ajax call
