Vi (and Vim) Cheatsheet

Mode Notes
    Normal (Command) Mode (use <Esc>), Insert Mode (use 'i'), Visual Mode (use <Esc>)
    Components: Commands, Motions and Operators
  
VI Command Summary Notes
    Fast Start and Finish
    Start vi at the command line                        vi or vi filename.ext if the file is in the current directory
    Start vi with multiple files in one window          vi filename1.ext filename2.ext (use :w to write and :n for next window)
    Read existing file into current location            :r drive:\path\filename.ext (or filename in current directory)
    Open a new or existing file                         :e drive:\path\filename.ext (or filename in current directory)
    Open a new or existing file in new window           :sp drive:\path\filename.ext (or filename in current directory)
    Switch to command mode, move to command line        <Esc>, :
    Insert or Append                                    i or I (start of line), a or A (end of line)
    Save file to current directory                      :w filename.ext or :w for current filename to current directory
    Save new file                                       :w drive\path\filename.ext
    Quit a file immediately (without saving)            :q!
    Save and quit                                       :wq or ZZ or :x
    Show help or quit/close help                        :help, :q (to quit)
    Get help on a specific topic                        <Ctrl>-] and <Ctrl>-t to go back
    Repeat last command                                 . or n. to repeat n times

Tips, Tricks and Trap Notes
    Every command is case-sensitive so "W" acts differently to "w"

Execute Shell Commands Notes
    Invoke the shell to run a single command            :! <Shell Command>
    Invoke the shell and then return to Vi              :shell or :sh then <Ctrl>-d to return (or exit in Windows)
    Invoke Ex line mode editing                         :Q

Inserting Text
    Insert at left of cursor, or beginning of line      :i, I (the 'I' ignores leading spaces on a line)
    Open new line before or after current line          :O (Capital 'Oh'), or :0 (small 'Oh') 
    Insert tab                                          <Ctrl>-i (in insert mode)

Read or Write a File Notes
    Write an existing file                              :w
    Write (overwrite an existing file)                  :w! drive\path\filename.ext
    Write file and quit                                 :wq
    Write file and exit to system prompt                :ZZ (without using a simi-colon)
    Write a range of lines to a new file                :10, 20 w <newfile>
    Read file or read file into a line number           :r <filename.ext> :20 r <filename>

Undo and Repeat Notes
    Undo change (and redo the undo)                     u, <Ctrl>-R
    Undo all changes on a line                          U
    Repeat the previous command                         .
    Repeat previous search forward or backward          / or ?
    Substitute first occurance of string                :s/<string1>/<string2>/
    Substitute all occurances on a line (global)        :s/<string1>/<string2>/g 
    Substitute all occurances on all lines              :%s/<string1>/<string2>/g
    Substitute all subsequent occurances                :$s/<string1>/<string2>/g
    Substitute all subsequent from a line to EOF        :20, $ s/<string1>/<string2>/g
    Substitute all within a range of lines              :20,30 s/<string1>/<string2>/g
    Substitute text with the original text and changes  :%s/<string1>/\0<added text>/g -- \0 is the backreferenced text in the search
    Substitute tabs with four characters                :%s/^V^I/    /g
    Substitute from start of word                       :%s/\<<string>\<newstring>/g  -- where \< flags start of word
    Substitute to end of word                           :%s/<string>\>/<newstring>/g -- where \> flags end of word

Change, or Replace or Join Notes
    Change word (delete word and type a new word)       cw or c(n)w for n words
    Change the current character with new character     r or r(n) <char> to replace multple characters
    Change the current character with new text          s followed by typing the <newtext>, or ns to replace n chars
    Change the line with new text                       S
    Change remainder of line and append text            c$ or C
    Change text up to/including next occurance of char  ct<char>, cf<char>
    Change a count of characters                        cnnl
    Overtype (and stay in overtype mode)                R
    Switch Case                                         ~ (tilda)
    Insert at beginning of line and blank out line      cc or S
    Join next line to current line                      J
    Switch two adjacent characters                      xp
    Change with prompt to confirm                       :%s/<oldtext>/<newtext/gc (global, confirm options)

Delete Notes (Operator d or x and Count and Motion e.g. d10w deletes 10 words)
    Delete characters fwd or back                       x, nx (forward) and X, nX (backwards)
    Delete remainder of word incl last character        de
    Delete to start of line or end of line              d0 (zero) to delete back, D or d$ to delete end of line
    Delete a line (drop dead) or range of lines         dd, ndd or :3,22 d
    Delete up to/including a matching character         dt<char>, df<char>
    Delete remainder of word and trailing spaces        dw, ndw (10dw deletes 10 words and trailing spaces)
    Delete a sentence (up to next period and space)     d)
    Delete n characters to the right                    nx
    Delete from cursor to character position            dn| (d10| deletes to position 10)
    Delete to bottom of screen                          dL
    Delete lines containing a string                    :g/<string>/d
    Delete to end of file                               dG

Move and Scroll Notes (Motions)
    Move to line                                        :n, nG
    Move to top of document, bottom of document         1G or gg or <Ctrl>-Home, G or <Ctrl>-End or :$
    Move to line n in document                          nG
    Move left, down, up, right                          h, j, k, l (or nh, nj, nk, nl)
    Move forward or backward to a character             f <char>, F <char>
    Move forward one word or back one word              w, b to move on non-alphabetical chars (or W, B to move on spaces)
    Move to end of current word                         e
    Move to start or end of current line                ^ to first char or 0 (zero) to first colun, or <Home>, $ or End
    Move to start of next line                          <Enter>
    Move to top, center, bottom of current page         H, M, L
    Move up or down one half screen                     <Ctrl>-u, <Ctrl>-d
    Move forward one page or back one page              <Ctrl>-f, <Ctrl>-b
    Move to start of previous line, next line           -, + (or n-, n+ for multiple lines)
    Move to previous edited line                        '' (i.e. two single quote marks)
    Move to a position on a line                        n| (pipe) (e.g. 20|)
    Move to matching parentheses                        % (place cursor on one parenthesis first)
    Move to previous location, next location            <Ctrl>-o, <Ctrl>-i

Mark and Return
    Mark text anywhere on a line                        mx, my, mz
    Return to line with marked text                     'x, 'y, 'z

Window Notes
    Move between split windows                          <Ctrl>-w j (down) or k (up)
    Rotate windows                                      <Ctrl>-w r (down) or R (up) 
    Exchange or switch window with next window          <Ctrl>-x 
    Move to top, bottom or previous window              <Ctrl>-w t, <Ctrl>-b, <Ctrl>-p 
    Make windows equal height                           < Ctrl>-=: 
    Increase or decrease window height                  <Ctrl>-+ (increase) or - (decrease)
    Set default window height                           <Ctrl>-_ (underscore) which is very large
    Open new window and close existing window            <Ctrl>-w n for new and <Ctrl>-w c to close (or :q)
    Open a new window and split                         :sp <filename> or omit filename to split current file into two windows

Yank and Put and Copy and Move Notes
    Yank word or line into buffer                       yw, yy (5yy yanks five words into the buffer)
    Put buffer contents before or after cursor          P, p
    Yank and delete word                                dw, 5dw (deletes 5 words into buffer)
    Yank an delete a line into buffer                   dd, 5dd (deletes 5 lines into buffer)
    Yank forward to a character                         yf<char>
    Yank remainder of line                              y$ or Y
    Copy lines of text to a destination                 :12,18 co 30
    Move lines of text to a destination                 :12,18 m 30
    Yank to end of file                                 yG

Search Notes
    Find a string in forward or backward mode           /<string> <enter> forward, ?<string> <enter> backward
    Find next or previous                               n, N
    Find next or previous occurance of word at cursor   *, #
    Find matching parentheses for ( { [                 %

Sorting, Indenting and Counting Notes
    Sort lines in visual mode                           v, then highlight lines, then :!sort (or :!sort u ... unique)
    Count words                                         g <Ctrl>-g
    Indent lines                                        v, then highlight lines, then > or n> for n indents

Special Characters Notes
    Caret (for control characters)                      <ctrl>-q
    Carriage return                                     <ctrl>-q <ctrl>-m

Set Default Options Notes (in _vimrc or Directly)
    Column Width                                        :set columns=nn (default is 80 with set nonumber)
    File to set options for a vi session                .exrc is hidden in the home or logon directory
    Show option settings, show option setting           :set all, set <option>
    Turn on/off autoindent                              :set autoindent, noautoindent
    Turn line numbering on or off                       :set number, nonumber
    Set tab length                                      :set tabstop=4
    Convert tabs to spaces                              :set expandtab, noexpandtab
    Turn line wrap on or off                            :set wrap, set nowrap
    Show matching parenthesis                           :set showmatch
    Set margin on or off on right side                  :set wrapmargin=10, set wrapmargin=0
    Set options on vi startup                           .exrc in user home directory (see below)
    Font                                                :set guifont=Lucida_Console:h9:cASNSI
    Show default files and locations                    :version
    File system location of _vimrc file                 $home (normally c:\Documents and Settings\<username>
    Display special control characters                  :set list, set nolist
    Change file type to Unix or DOS                     :set fileformat=DOS, set fileformat=unix (or set ff)
    Ignore case in searches (or do not ignore)          :set ic to ignore case, set noic to observe case
    Ignore case unless uppercase given                  :set scs or set noscs
    Highlight search results                            :set hlsearch
    Show File or Character Information                  g^g
    Get filename and position in file                   ^g
    Get ASCII equivalent of character at cursor         ga
    Set the cursorline                                  :set cursorline
    Color Schemes                                       :colo murphy, torte, pablo, ron, blue, evening, koehler, etc ...
    Set line length (i.e. textwidth)                    :set tw=100 (use :verbose set tw? wm? to find who is setting it)

References Notes
    gvim homepage                                       http://www.vim.org/
    Tutor                                               vimtutor (run from the command line)
    Vim Adventures Game                                 http://vim-adventures.com/
    Vim Casts                                           http://vimcasts.org/
    cursor shape in tmux                                https://stackoverflow.com/questions/57099868/putty-tmux-vim-change-cursor-shape

Help Notes
    Use :help to show the help menu in a new window
    Use :help <keyword> to go directly to a topic in help
    Move to a help topic from with a |Bar| tag          <Ctrl>-]
    Return from a help topic                            <Ctrl>-t
